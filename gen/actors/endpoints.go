// Code generated by goa v3.2.4, DO NOT EDIT.
//
// actors endpoints
//
// Command:
// $ goa gen github.com/selmison/seed-desafio-cdc/design

package actors

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Endpoints wraps the "actors" service endpoints.
type Endpoints struct {
	Create endpoint.Endpoint
}

// NewEndpoints wraps the methods of the "actors" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Create: NewCreateEndpoint(s),
	}
}

// Use applies the given middleware to all the "actors" service endpoints.
func (e *Endpoints) Use(m func(endpoint.Endpoint) endpoint.Endpoint) {
	e.Create = m(e.Create)
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "actors".
func NewCreateEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*CreatePayload)
		return s.Create(ctx, p)
	}
}
