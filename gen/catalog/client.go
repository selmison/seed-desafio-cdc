// Code generated by goa v3.2.4, DO NOT EDIT.
//
// catalog client
//
// Command:
// $ goa gen github.com/selmison/seed-desafio-cdc/design

package catalog

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "catalog" service client.
type Client struct {
	CreateActorEndpoint    endpoint.Endpoint
	ShowActorEndpoint      endpoint.Endpoint
	CreateBookEndpoint     endpoint.Endpoint
	ListBooksEndpoint      endpoint.Endpoint
	ShowBookEndpoint       endpoint.Endpoint
	CreateCategoryEndpoint endpoint.Endpoint
	ShowCategoryEndpoint   endpoint.Endpoint
	CreateCustomerEndpoint endpoint.Endpoint
	CreateCountryEndpoint  endpoint.Endpoint
	CreateStateEndpoint    endpoint.Endpoint
}

// NewClient initializes a "catalog" service client given the endpoints.
func NewClient(createActor, showActor, createBook, listBooks, showBook, createCategory, showCategory, createCustomer, createCountry, createState endpoint.Endpoint) *Client {
	return &Client{
		CreateActorEndpoint:    createActor,
		ShowActorEndpoint:      showActor,
		CreateBookEndpoint:     createBook,
		ListBooksEndpoint:      listBooks,
		ShowBookEndpoint:       showBook,
		CreateCategoryEndpoint: createCategory,
		ShowCategoryEndpoint:   showCategory,
		CreateCustomerEndpoint: createCustomer,
		CreateCountryEndpoint:  createCountry,
		CreateStateEndpoint:    createState,
	}
}

// CreateActor calls the "create_actor" endpoint of the "catalog" service.
func (c *Client) CreateActor(ctx context.Context, p *CreateActorDTO) (res *ActorDTO, err error) {
	var ires interface{}
	ires, err = c.CreateActorEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ActorDTO), nil
}

// ShowActor calls the "show_actor" endpoint of the "catalog" service.
func (c *Client) ShowActor(ctx context.Context, p *ShowByIDDTO) (res *ActorDTO, err error) {
	var ires interface{}
	ires, err = c.ShowActorEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ActorDTO), nil
}

// CreateBook calls the "create_book" endpoint of the "catalog" service.
func (c *Client) CreateBook(ctx context.Context, p *CreateBookDTO) (res *BookDTO, err error) {
	var ires interface{}
	ires, err = c.CreateBookEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BookDTO), nil
}

// ListBooks calls the "list_books" endpoint of the "catalog" service.
func (c *Client) ListBooks(ctx context.Context) (res []*BookDTO, err error) {
	var ires interface{}
	ires, err = c.ListBooksEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*BookDTO), nil
}

// ShowBook calls the "show_book" endpoint of the "catalog" service.
func (c *Client) ShowBook(ctx context.Context, p *ShowByIDDTO) (res *BookDTO, err error) {
	var ires interface{}
	ires, err = c.ShowBookEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BookDTO), nil
}

// CreateCategory calls the "create_category" endpoint of the "catalog" service.
func (c *Client) CreateCategory(ctx context.Context, p *CreateCategoryDTO) (res *CategoryDTO, err error) {
	var ires interface{}
	ires, err = c.CreateCategoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CategoryDTO), nil
}

// ShowCategory calls the "show_category" endpoint of the "catalog" service.
func (c *Client) ShowCategory(ctx context.Context, p *ShowByIDDTO) (res *CategoryDTO, err error) {
	var ires interface{}
	ires, err = c.ShowCategoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CategoryDTO), nil
}

// CreateCustomer calls the "create_customer" endpoint of the "catalog" service.
func (c *Client) CreateCustomer(ctx context.Context, p *CreateCustomerDTO) (res *CustomerDTO, err error) {
	var ires interface{}
	ires, err = c.CreateCustomerEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CustomerDTO), nil
}

// CreateCountry calls the "create_country" endpoint of the "catalog" service.
func (c *Client) CreateCountry(ctx context.Context, p *CreateCountryDTO) (res *CountryDTO, err error) {
	var ires interface{}
	ires, err = c.CreateCountryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CountryDTO), nil
}

// CreateState calls the "create_state" endpoint of the "catalog" service.
func (c *Client) CreateState(ctx context.Context, p *CreateStateDTO) (res *StateDTO, err error) {
	var ires interface{}
	ires, err = c.CreateStateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StateDTO), nil
}
