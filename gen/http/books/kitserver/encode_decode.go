// Code generated by goa v3.2.4, DO NOT EDIT.
//
// books go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/selmison/seed-desafio-cdc/design

package server

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/selmison/seed-desafio-cdc/gen/http/books/server"
	goahttp "goa.design/goa/v3/http"
)

// EncodeCreateBookResponse returns a go-kit EncodeResponseFunc suitable for
// encoding books create_book responses.
func EncodeCreateBookResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeCreateBookResponse(encoder)
}

// DecodeCreateBookRequest returns a go-kit DecodeRequestFunc suitable for
// decoding books create_book requests.
func DecodeCreateBookRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeCreateBookRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeCreateBookError returns a go-kit EncodeResponseFunc suitable for
// encoding errors returned by the books create_book endpoint.
func EncodeCreateBookError(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder, formatter func(err error) goahttp.Statuser) kithttp.ErrorEncoder {
	enc := server.EncodeCreateBookError(encoder, formatter)
	return func(ctx context.Context, err error, w http.ResponseWriter) {
		enc(ctx, w, err)
	}
}

// EncodeListBooksResponse returns a go-kit EncodeResponseFunc suitable for
// encoding books list_books responses.
func EncodeListBooksResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeListBooksResponse(encoder)
}
