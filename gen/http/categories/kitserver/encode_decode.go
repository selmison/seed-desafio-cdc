// Code generated by goa v3.2.4, DO NOT EDIT.
//
// categories go-kit HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/selmison/seed-desafio-cdc/design

package server

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/selmison/seed-desafio-cdc/gen/http/categories/server"
	goahttp "goa.design/goa/v3/http"
)

// EncodeCreateCategoryResponse returns a go-kit EncodeResponseFunc suitable
// for encoding categories create_category responses.
func EncodeCreateCategoryResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) kithttp.EncodeResponseFunc {
	return server.EncodeCreateCategoryResponse(encoder)
}

// DecodeCreateCategoryRequest returns a go-kit DecodeRequestFunc suitable for
// decoding categories create_category requests.
func DecodeCreateCategoryRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) kithttp.DecodeRequestFunc {
	dec := server.DecodeCreateCategoryRequest(mux, decoder)
	return func(ctx context.Context, r *http.Request) (interface{}, error) {
		r = r.WithContext(ctx)
		return dec(r)
	}
}

// EncodeCreateCategoryError returns a go-kit EncodeResponseFunc suitable for
// encoding errors returned by the categories create_category endpoint.
func EncodeCreateCategoryError(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder, formatter func(err error) goahttp.Statuser) kithttp.ErrorEncoder {
	enc := server.EncodeCreateCategoryError(encoder, formatter)
	return func(ctx context.Context, err error, w http.ResponseWriter) {
		enc(ctx, w, err)
	}
}
