// Code generated by goa v3.2.4, DO NOT EDIT.
//
// categories HTTP server types
//
// Command:
// $ goa gen github.com/selmison/seed-desafio-cdc/design

package server

import (
	categories "github.com/selmison/seed-desafio-cdc/gen/categories"
	goa "goa.design/goa/v3/pkg"
)

// CreateCategoryRequestBody is the type of the "categories" service
// "create_category" endpoint HTTP request body.
type CreateCategoryRequestBody struct {
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// CreateCategoryResponseBody is the type of the "categories" service
// "create_category" endpoint HTTP response body.
type CreateCategoryResponseBody struct {
	ID   string `form:"id" json:"id" xml:"id"`
	Name string `form:"name" json:"name" xml:"name"`
}

// CreateCategoryInvalidFieldsResponseBody is the type of the "categories"
// service "create_category" endpoint HTTP response body for the
// "invalid_fields" error.
type CreateCategoryInvalidFieldsResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewCreateCategoryResponseBody builds the HTTP response body from the result
// of the "create_category" endpoint of the "categories" service.
func NewCreateCategoryResponseBody(res *categories.CategoryDTO) *CreateCategoryResponseBody {
	body := &CreateCategoryResponseBody{
		ID:   res.ID,
		Name: res.Name,
	}
	return body
}

// NewCreateCategoryInvalidFieldsResponseBody builds the HTTP response body
// from the result of the "create_category" endpoint of the "categories"
// service.
func NewCreateCategoryInvalidFieldsResponseBody(res *goa.ServiceError) *CreateCategoryInvalidFieldsResponseBody {
	body := &CreateCategoryInvalidFieldsResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCreateCategoryDTO builds a categories service create_category endpoint
// payload.
func NewCreateCategoryDTO(body *CreateCategoryRequestBody) *categories.CreateCategoryDTO {
	v := &categories.CreateCategoryDTO{
		Name: *body.Name,
	}

	return v
}

// ValidateCreateCategoryRequestBody runs the validations defined on
// create_category_request_body
func ValidateCreateCategoryRequestBody(body *CreateCategoryRequestBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	return
}
